# .ebextensions/scaling.config

Resources:
  # Target Tracking Scaling Policy for CPU Utilization
  CpuTargetTrackingScalingPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AutoScalingGroupName: { "Ref": "AWSEBAutoScalingGroup" }
      PolicyType: "TargetTrackingScaling"
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: "ASGAverageCPUUtilization"
        TargetValue: 45.0  # Set to trigger scaling up more aggressively
  
  # Aggressive NetworkOut Scaling Policy (Scale-Up)
  NetworkOutScaleUpPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AutoScalingGroupName: { "Ref": "AWSEBAutoScalingGroup" }
      PolicyType: "SimpleScaling"
      ScalingAdjustment: 2  # Scale up by 2 instances
      AdjustmentType: "ChangeInCapacity"
      Cooldown: "5"

  # Scale-Down Policy for NetworkOut
  NetworkOutScaleDownPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AutoScalingGroupName: { "Ref": "AWSEBAutoScalingGroup" }
      PolicyType: "SimpleScaling"
      ScalingAdjustment: -1  # Scale down by 1 instance to maintain stability
      AdjustmentType: "ChangeInCapacity"
      Cooldown: "60"

  # CloudWatch Alarm to Trigger Scale-Up for NetworkOut
  NetworkOutAlarmHigh:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "Aggressive scale-up if NetworkOut > 1.5GB"
      MetricName: "NetworkOut"
      Namespace: "AWS/EC2"
      Statistic: "Average"
      Period: "60"
      EvaluationPeriods: "1"
      Threshold: "1500000000"  # 1.5 GB in bytes
      ComparisonOperator: "GreaterThanThreshold"
      AlarmActions:
        - { "Ref": "NetworkOutScaleUpPolicy" }
      Dimensions:
        - Name: "AutoScalingGroupName"
          Value: { "Ref": "AWSEBAutoScalingGroup" }

  # CloudWatch Alarm to Trigger Scale-Down for NetworkOut
  NetworkOutAlarmLow:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "Scale down if NetworkOut < 500MB"
      MetricName: "NetworkOut"
      Namespace: "AWS/EC2"
      Statistic: "Average"
      Period: "60"
      EvaluationPeriods: "1"
      Threshold: "500000000"  # 500 MB in bytes
      ComparisonOperator: "LessThanThreshold"
      AlarmActions:
        - { "Ref": "NetworkOutScaleDownPolicy" }
      Dimensions:
        - Name: "AutoScalingGroupName"
          Value: { "Ref": "AWSEBAutoScalingGroup" }

  # NetworkIn Scaling Policies
  NetworkInScaleUpPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AutoScalingGroupName: { "Ref": "AWSEBAutoScalingGroup" }
      PolicyType: "SimpleScaling"
      ScalingAdjustment: 2  # Aggressive scale-up
      AdjustmentType: "ChangeInCapacity"
      Cooldown: "5"

  NetworkInScaleDownPolicy:
    Type: "AWS::AutoScaling::ScalingPolicy"
    Properties:
      AutoScalingGroupName: { "Ref": "AWSEBAutoScalingGroup" }
      PolicyType: "SimpleScaling"
      ScalingAdjustment: -1
      AdjustmentType: "ChangeInCapacity"
      Cooldown: "60"

  # CloudWatch Alarm to Trigger Scale-Up for NetworkIn
  NetworkInAlarmHigh:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "Aggressive scale-up if NetworkIn > 1.5GB"
      MetricName: "NetworkIn"
      Namespace: "AWS/EC2"
      Statistic: "Average"
      Period: "60"
      EvaluationPeriods: "1"
      Threshold: "1500000000"  # 1.5 GB in bytes
      ComparisonOperator: "GreaterThanThreshold"
      AlarmActions:
        - { "Ref": "NetworkInScaleUpPolicy" }
      Dimensions:
        - Name: "AutoScalingGroupName"
          Value: { "Ref": "AWSEBAutoScalingGroup" }

  # CloudWatch Alarm to Trigger Scale-Down for NetworkIn
  NetworkInAlarmLow:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: "Scale down if NetworkIn < 500MB"
      MetricName: "NetworkIn"
      Namespace: "AWS/EC2"
      Statistic: "Average"
      Period: "60"
      EvaluationPeriods: "1"
      Threshold: "500000000"  # 500 MB in bytes
      ComparisonOperator: "LessThanThreshold"
      AlarmActions:
        - { "Ref": "NetworkInScaleDownPolicy" }
      Dimensions:
        - Name: "AutoScalingGroupName"
          Value: { "Ref": "AWSEBAutoScalingGroup" }